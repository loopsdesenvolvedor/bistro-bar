generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  confirmEmail String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())

  carts Cart[]
  Order Order[]

  @@map("users")
}

model Product {
  id          String @id @default(uuid())
  name        String
  price       Int
  description String
  banner      String
  cashback    Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  categories Category[] @relation("ProductCategories")

  cartItems CartItem[]

  serviceId String?
  service   Service? @relation(fields: [serviceId], references: [id])

  @@map("products")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  products Product[] @relation("ProductCategories")

  @@map("categories")
}

model Service {
  id          String @id @default(uuid())
  name        String
  description String
  banner      String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  products Product[]

  @@map("services")
}

enum CartStatus {
  active
  abandoned
  completed
}

model Cart {
  id        String     @id @default(uuid())
  status    CartStatus @default(active)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  cartItems CartItem[]
  Discount  Discount[]
  Order     Order[]

  @@map("carts")
}

model CartItem {
  id       String @id @default(uuid())
  quantity Int
  price    Float

  cartId String
  cart   Cart   @relation(fields: [cartId], references: [id])

  productId String
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("cartItems")
}

model Discount {
  id        String   @id @default(uuid())
  code      String   @unique
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartId String?
  cart   Cart?   @relation(fields: [cartId], references: [id])

  @@map("discounts")
}

model Order {
  id        String   @id @default(uuid())
  userId    String
  cartId    String
  status    String
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  cart Cart @relation(fields: [cartId], references: [id])

  @@map("orders")
}
